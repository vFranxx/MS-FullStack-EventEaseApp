@page "/events"

@using EventEaseApp.Components.Events
@using EventEaseApp.Data
@using EventEaseApp.Components
@using EventEaseApp.Services

@inject NavigationManager NavigationManager
@inject IEventService EventService
@inject IUserService UserService

@if(!UserService.IsAuthenticated)
{
    <RedirectToHome />
}

<h1>EventList</h1>

<button @onclick="AddEvent" class="mb-3">Add new</button>

@* @foreach (var item in events)
{
    <ul>
        <EventCardComponent Id="@item.Id" Title="@item.Title" Date="@item.Date.ToString()" Location="@item.Location" />
    </ul>
} This isn't as optimal as using virtualize*@

@* 
    This is the foreach equivalent, that's why it uses context="item"
    Because Blazor needs to know what is the name of each element in the list
*@
<Virtualize Items="@events" Context="item">
    <ul>
        <EventCardComponent Id="@item.Id" Title="@item.Title" Date="@item.Date.ToString()" Location="@item.Location" />
    </ul>
</Virtualize>

@if (events.Count == 0)
{
    <p>No events registered...</p>    
}

@code {
    private List<Event> events = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        events = await EventService.GetTasksAsync();
    }

    private void AddEvent()
    {
        NavigationManager.NavigateTo("/registerEvent");
    }
}
