@using EventEaseApp.Data
@using EventEaseApp.Services

@inject IUserService UserService

@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">EventEaseApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (UserService.IsAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="events" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Events
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="attendance" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Attendance Tracker
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link">
                    <span>@UserService.CurrentUser?.Name </span>
                    <button class="btn btn-link p-0" title="Logout" @onclick="Logout">Logout</button>
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        UserService.OnChange += StateHasChanged; // Refresh UI when user state changes
    }

    public void Dispose()
    {
        UserService.OnChange -= StateHasChanged; // Unsubscribe to avoid memory leaks
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await UserService.Logout();
        StateHasChanged(); // Refresh the UI after logout
    }
}
